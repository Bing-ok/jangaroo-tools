<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified"
           elementFormDefault="qualified"
           targetNamespace="http://www.jangaroo.net/exml/0.8"
           version="0.8"
           xmlns:exml="http://www.jangaroo.net/exml/0.8"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:simpleType name="String">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <xs:simpleType name="Boolean">
     <xs:restriction base="xs:string">
        <xs:pattern value="(\{.*\})|true|false"/>
     </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Number">
     <xs:restriction base="xs:string">
        <xs:pattern value="(\{.*\})|((([0-9]+\.[0-9]*)|(\.[0-9]+)|([0-9]+))([eE][+-]?[0-9]+)?)"/>
     </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Date">
     <xs:restriction base="xs:string">
       <!-- TODO: do we want a pattern-based restriction to valid date literals? -->
     </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="jsType">
    <xs:annotation>
      <xs:documentation>
        The type of an javascript property.
        <ul>
          <li>String</li>
          <li>Number</li>
          <li>Boolean</li>
          <li>Float</li>
          <li>Date</li>
          <li>Object</li>
          <li>Array</li>
        </ul>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="String"/>
      <xs:enumeration value="Number"/>
      <xs:enumeration value="Boolean"/>
      <xs:enumeration value="Float"/>
      <xs:enumeration value="Date"/>
      <xs:enumeration value="Object"/>
      <xs:enumeration value="Array"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="cfg">
    <xs:annotation>
      <xs:documentation>
        An additional config property of this component. The newly created property can
        be used with binding in other properties of components, e.g. <i><b>{config.&lt;name of the property>}</b></i>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The description of the config property. optional.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          The name of the config property.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="exml:jsType" use="required">
      <xs:annotation>
        <xs:documentation>
          The type of the config property.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="import">
    <xs:annotation>
      <xs:documentation>
        Imports the specified class into the component. This is necessary when using third-party classes inside code blocks like event handlers. 
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="class" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="object">
    <xs:annotation>
      <xs:documentation>
        Creates an anonymous object. Either with attributes or with JSON as text node.
      </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:anyAttribute processContents="skip"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="component">
    <xs:annotation>
      <xs:documentation>
        An Ext XML Component consiting of optional cfg elements and one
        component element that is the parent component.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="import" type="exml:import" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="cfg" type="exml:cfg" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>
            The description of the new component class. optional.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <!--
      We want minOccurs to be 1, but IDEA reports validation error if we explicitly say so.
      Thus, we stick to the default value, which the specs says is 1.
      -->
      <xs:any maxOccurs="1" namespace="##other" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="component" type="exml:component"/>
  <xs:element name="object" type="exml:object"/>
  <xs:attribute name="type" type="exml:jsType"/>

</xs:schema>

#! /bin/sh

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Extract launch and arguments, (see details below).

# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Home
           fi
           ;;
esac

## resolve links - $0 may be a link
PRG="$0"
progname=`basename "$0"`

joo_class_name=$1
shift
joo_exec_args="$@"

# need this for relative symlinks
while [ -h "$PRG" ] ; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
  PRG="$link"
  else
  PRG=`dirname "$PRG"`"/$link"
  fi
done

JOO_HOME=`dirname "$PRG"`/..

# make it fully qualified
JOO_HOME=`cd "$JOO_HOME" && pwd`

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JOO_HOME" ] &&
    JOO_HOME=`cygpath --unix "$JOO_HOME"`
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    # IBM's JDK on AIX uses strange locations for the executables
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      JAVACMD="$JAVA_HOME/jre/sh/java"
    elif [ -x "$JAVA_HOME/jre/bin/java" ] ; then
      JAVACMD="$JAVA_HOME/jre/bin/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
    if [ -z "$JAVACMD" ] ; then
        JAVACMD=java
    fi
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly."
  echo "  We cannot execute $JAVACMD"
  exit 1
fi

JOO_CLASSPATH=`ls -mr $JOO_HOME/lib/*.jar | sed -e 's#,#:#g'`
JOO_CLASSPATH=`echo $JOO_CLASSPATH |sed -e 's#: #:#g'`

# For Cygwin, switch paths to appropriate format before running java
# For PATHs convert to unix format first, then to windows format to ensure
# both formats are supported. Probably this will fail on directories with ;
# in the name in the path. Let's assume that paths containing ; are more
# rare than windows style paths on cygwin.
if $cygwin; then
  if [ "$OS" = "Windows_NT" ] && cygpath -m .>/dev/null 2>/dev/null ; then
    format=mixed
  else
    format=windows
  fi
  JOO_HOME=`cygpath --$format "$JOO_HOME"`
  JAVA_HOME=`cygpath --$format "$JAVA_HOME"`
  LCP_TEMP=`cygpath --path --unix "$JOO_CLASSPATH"`
  JOO_CLASSPATH=`cygpath --path --$format "$LCP_TEMP"`
  CYGHOME=`cygpath --$format "$HOME"`
fi

JOO_CLASSPATH=$JOO_CLASSPATH:$JAVA_HOME/lib/tools.jar

# add a second backslash to variables terminated by a backslash under cygwin
if $cygwin; then
  case "$JOO_HOME" in
    *\\ )
    JOO_HOME="$JOO_HOME\\"
    ;;
  esac
  case "$CYGHOME" in
    *\\ )
    CYGHOME="$CYGHOME\\"
    ;;
  esac
  case "$JOO_CLASSPATH" in
    *\\ )
    JOO_CLASSPATH="$JOO_CLASSPATH\\"
    ;;
  esac
fi
# Execute using eval/exec to preserve spaces in paths,
# java options, and args
joo_exec_command="exec \"$JAVACMD\" -cp \"$JOO_CLASSPATH\" $joo_class_name $joo_exec_args"
eval $joo_exec_command
